/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.05.5&openapi/slurmdbd&openapi/dbv0.0.39&openapi/slurmctld&openapi/v0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v0041

import (
	"encoding/json"
)

// checks if the V0039JobArrayLimitsMax type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0039JobArrayLimitsMax{}

// V0039JobArrayLimitsMax struct for V0039JobArrayLimitsMax
type V0039JobArrayLimitsMax struct {
	Running *V0039JobArrayLimitsMaxRunning `json:"running,omitempty"`
}

// NewV0039JobArrayLimitsMax instantiates a new V0039JobArrayLimitsMax object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0039JobArrayLimitsMax() *V0039JobArrayLimitsMax {
	this := V0039JobArrayLimitsMax{}
	return &this
}

// NewV0039JobArrayLimitsMaxWithDefaults instantiates a new V0039JobArrayLimitsMax object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0039JobArrayLimitsMaxWithDefaults() *V0039JobArrayLimitsMax {
	this := V0039JobArrayLimitsMax{}
	return &this
}

// GetRunning returns the Running field value if set, zero value otherwise.
func (o *V0039JobArrayLimitsMax) GetRunning() V0039JobArrayLimitsMaxRunning {
	if o == nil || IsNil(o.Running) {
		var ret V0039JobArrayLimitsMaxRunning
		return ret
	}
	return *o.Running
}

// GetRunningOk returns a tuple with the Running field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039JobArrayLimitsMax) GetRunningOk() (*V0039JobArrayLimitsMaxRunning, bool) {
	if o == nil || IsNil(o.Running) {
		return nil, false
	}
	return o.Running, true
}

// HasRunning returns a boolean if a field has been set.
func (o *V0039JobArrayLimitsMax) HasRunning() bool {
	if o != nil && !IsNil(o.Running) {
		return true
	}

	return false
}

// SetRunning gets a reference to the given V0039JobArrayLimitsMaxRunning and assigns it to the Running field.
func (o *V0039JobArrayLimitsMax) SetRunning(v V0039JobArrayLimitsMaxRunning) {
	o.Running = &v
}

func (o V0039JobArrayLimitsMax) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0039JobArrayLimitsMax) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Running) {
		toSerialize["running"] = o.Running
	}
	return toSerialize, nil
}

type NullableV0039JobArrayLimitsMax struct {
	value *V0039JobArrayLimitsMax
	isSet bool
}

func (v NullableV0039JobArrayLimitsMax) Get() *V0039JobArrayLimitsMax {
	return v.value
}

func (v *NullableV0039JobArrayLimitsMax) Set(val *V0039JobArrayLimitsMax) {
	v.value = val
	v.isSet = true
}

func (v NullableV0039JobArrayLimitsMax) IsSet() bool {
	return v.isSet
}

func (v *NullableV0039JobArrayLimitsMax) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0039JobArrayLimitsMax(val *V0039JobArrayLimitsMax) *NullableV0039JobArrayLimitsMax {
	return &NullableV0039JobArrayLimitsMax{value: val, isSet: true}
}

func (v NullableV0039JobArrayLimitsMax) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0039JobArrayLimitsMax) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


