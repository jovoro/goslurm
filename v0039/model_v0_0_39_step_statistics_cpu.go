/*
Slurm REST API

API to access and control Slurm

API version: Slurm-24.05.5&openapi/slurmdbd&openapi/dbv0.0.39&openapi/slurmctld&openapi/v0.0.39
Contact: sales@schedmd.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V0039StepStatisticsCPU type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0039StepStatisticsCPU{}

// V0039StepStatisticsCPU struct for V0039StepStatisticsCPU
type V0039StepStatisticsCPU struct {
	ActualFrequency *int64 `json:"actual_frequency,omitempty"`
}

// NewV0039StepStatisticsCPU instantiates a new V0039StepStatisticsCPU object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0039StepStatisticsCPU() *V0039StepStatisticsCPU {
	this := V0039StepStatisticsCPU{}
	return &this
}

// NewV0039StepStatisticsCPUWithDefaults instantiates a new V0039StepStatisticsCPU object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0039StepStatisticsCPUWithDefaults() *V0039StepStatisticsCPU {
	this := V0039StepStatisticsCPU{}
	return &this
}

// GetActualFrequency returns the ActualFrequency field value if set, zero value otherwise.
func (o *V0039StepStatisticsCPU) GetActualFrequency() int64 {
	if o == nil || IsNil(o.ActualFrequency) {
		var ret int64
		return ret
	}
	return *o.ActualFrequency
}

// GetActualFrequencyOk returns a tuple with the ActualFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0039StepStatisticsCPU) GetActualFrequencyOk() (*int64, bool) {
	if o == nil || IsNil(o.ActualFrequency) {
		return nil, false
	}
	return o.ActualFrequency, true
}

// HasActualFrequency returns a boolean if a field has been set.
func (o *V0039StepStatisticsCPU) HasActualFrequency() bool {
	if o != nil && !IsNil(o.ActualFrequency) {
		return true
	}

	return false
}

// SetActualFrequency gets a reference to the given int64 and assigns it to the ActualFrequency field.
func (o *V0039StepStatisticsCPU) SetActualFrequency(v int64) {
	o.ActualFrequency = &v
}

func (o V0039StepStatisticsCPU) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0039StepStatisticsCPU) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActualFrequency) {
		toSerialize["actual_frequency"] = o.ActualFrequency
	}
	return toSerialize, nil
}

type NullableV0039StepStatisticsCPU struct {
	value *V0039StepStatisticsCPU
	isSet bool
}

func (v NullableV0039StepStatisticsCPU) Get() *V0039StepStatisticsCPU {
	return v.value
}

func (v *NullableV0039StepStatisticsCPU) Set(val *V0039StepStatisticsCPU) {
	v.value = val
	v.isSet = true
}

func (v NullableV0039StepStatisticsCPU) IsSet() bool {
	return v.isSet
}

func (v *NullableV0039StepStatisticsCPU) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0039StepStatisticsCPU(val *V0039StepStatisticsCPU) *NullableV0039StepStatisticsCPU {
	return &NullableV0039StepStatisticsCPU{value: val, isSet: true}
}

func (v NullableV0039StepStatisticsCPU) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0039StepStatisticsCPU) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


